/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import {HandleMsg, HumanAddr, Uint128, Binary, Coin, InitMsg} from "./types";
import {MigrateMsg, QueryMsg} from "./AioracleHealthCheck.types";
export interface AioracleHealthCheckReadOnlyInterface {
  contractAddress: string;
  getPingInfo: () => Promise<GetPingInfoResponse>;
  getReadPingInfo: () => Promise<GetReadPingInfoResponse>;
  getPingInfos: ({
    limit,
    offset,
    order
  }: {
    limit?: number;
    offset?: Binary;
    order?: number;
  }) => Promise<GetPingInfosResponse>;
  getState: () => Promise<GetStateResponse>;
}
export class AioracleHealthCheckQueryClient implements AioracleHealthCheckReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
    this.getPingInfo = this.getPingInfo.bind(this);
    this.getReadPingInfo = this.getReadPingInfo.bind(this);
    this.getPingInfos = this.getPingInfos.bind(this);
    this.getState = this.getState.bind(this);
  }

  getPingInfo = async (): Promise<GetPingInfoResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      get_ping_info: {}
    });
  };
  getReadPingInfo = async (): Promise<GetReadPingInfoResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      get_read_ping_info: {}
    });
  };
  getPingInfos = async ({
    limit,
    offset,
    order
  }: {
    limit?: number;
    offset?: Binary;
    order?: number;
  }): Promise<GetPingInfosResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      get_ping_infos: {
        limit,
        offset,
        order
      }
    });
  };
  getState = async (): Promise<GetStateResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      get_state: {}
    });
  };
}